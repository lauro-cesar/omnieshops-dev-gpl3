{                
    "name": "OmniDashboard",
    "namespace": "OmniDashboard",
    "version": "1.0.0.0",
    "framework": "ext62",
    "requires": [
        "font-awesome"
    ],
    "indexHtmlPath": "index.html",
    "classpath": [
        "app",
        "${toolkit.name}/src"
    ],
    "overrides": [
        "overrides",
        "${toolkit.name}/overrides"
    ],
    "fashion": {

        "inliner": {

            "enable": false
        }
    },


    "sass": {

        "namespace": "OmniDashboard",

       
        "etc": [
            "sass/etc/all.scss",
            "${toolkit.name}/sass/etc/all.scss"
        ],

      
        "var": [
            "sass/var/all.scss",
            "sass/var",
            "${toolkit.name}/sass/var/all.scss",
            "${toolkit.name}/sass/var"
        ],

       
        "src": [
            "sass/src",
            "${toolkit.name}/sass/src"
        ]
    },
    "js": [
        {
            "path": "app.js",
            "bundle": true
        }
    ],
    "classic": {
        "js": [
            // Remove this entry to individually load sources from the framework.
            {
                "path": "${framework.dir}/build/ext-all-rtl-debug.js"
            }
        ]
    },
    "modern": {
        "js": [
            // Remove this entry to individually load sources from the framework.
            {
                "path": "${framework.dir}/build/ext-modern-all-debug.js"
            }
        ]
    },
    "css": [
        {
            // this entry uses an ant variable that is the calculated
            // value of the generated output css file for the app,
            // defined in .sencha/app/defaults.properties
            "path": "${build.out.css.path}",
            "bundle": true,
            "exclude": ["fashion"]
        }
    ],
     "loader": {
         // This property controls how the loader manages caching for requests:
         //
         //   - true: allows requests to receive cached responses
         //   - false: disable cached responses by adding a random "cache buster"
         //   - other: a string (such as the build.timestamp shown here) to allow
         //     requests to be cached for this build.
         //
         "cache": false,

         // When "cache" is not true, this value is the request parameter used
         // to control caching.
         //
         "cacheParam": "_dc"
     },
     "development": {
        "watch": {
            "delay": 1500
        }
    },
    "production": {
        "output": {
            "appCache": {
                "enable": true,
                "path": "cache.appcache"
            }
        },
        "loader": {
            "cache": "${build.timestamp}"
        },
        "cache": {
            "enable": true
        },
        "compressor": {
            "type": "yui"
        }
    },
    "testing": {
        "watch": {
            "delay": 250
        }
    },

    "bootstrap": {
        "base": "${app.dir}",

        "manifest": "${build.id}.json",

        "microloader": "bootstrap.js",
        "css": "bootstrap.css"
    },
    "output": {
        "base": "${workspace.build.dir}/${build.environment}/${app.name}",
        "page": "index.html",
        "manifest": "${build.id}.json",
        "js": "${build.id}/app.js",
        "appCache": {
            "enable": true
        },
        "resources": {
            "path": "${build.id}/resources",
            "shared": "resources"
        }
    },
    "cache": {
        "enable": true,
        "deltas": "${build.id}/deltas"
    },
    "appCache": {
        "cache": [
            "index.html"
        ],
        "network": [
            "*"
        ],
        "fallback": []
    },
    "resources": [
        {
            "path": "resources",
            "output": "shared"
        },
        {
            "path": "${toolkit.name}/resources"
        },
        {
            "path": "${build.id}/resources"
        }
    ],
    "archivePath": "archive/${build.id}",

    "builds": {
        "classic": {
            "toolkit": "classic",
            "theme": "theme-triton",
            "packager": "cordova",
            "cordova": {
                "config": {
                    "platforms": "osx",
                    "id": "com.omnieshops.OmniDashboard",
                    "name": "OmniDashboard"
                }
            },
            "sass": {
                "generated": {
                    "var": "classic/sass/save.scss",
                    "src": "classic/sass/save"
                }
            }
        },
        "modern": {
            "toolkit": "modern",
            "theme": "theme-cupertino",
            "cordova": {
                "config": {
                    "platforms": "ios",
                    "id": "com.omnieshops.OmniDashboard",
                    "name": "OmniDashboard"
                }
            },            
            "sass": {
                "generated": {
                    "var": "modern/sass/save.scss",
                    "src": "modern/sass/save"
                }
            }
        }
    },
    "ignore": [
        "(^|/)CVS(/?$|/.*?$)"
    ],
    "id": "f2cff657-8ff0-45e1-b1d6-a637159b2233"
}
